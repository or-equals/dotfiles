#!/usr/bin/env bash
# Usage: mux [<name>]
#
# Summary: Create or reattach to tmux session
#
# Help: After `cd`ing to a directory you'd like the root of your tmux session to be:
#
#    $ mux
#
# The above will create a tmux session named after the directory you're
# in and create a few useful default windows with a sensible layout.
#
# If a session already exists with the name of your directory, this command will
# simply re-attach to that session.

export ORIG_PATH="$PATH"

sanitize() {
  echo "$(basename $1 | sed -e 's/\./-/g')"
}

if [ "$1" = "--complete" ]; then
  [ $# -gt 1 ] && exit 0

  # List tmux sessions
  tmux list-sessions 2>/dev/null | sed -e 's/:.*//'

  # List potential directories
  find $SOURCE_DIR -not -name '.*' -maxdepth 1 -mindepth 1 -type d | while read dir; do
    echo "$(basename $dir)"
  done

  exit
fi

if [ -n "$TMUX" ]; then
  echo "ERROR: You're already in a tmux session. Nesting tmux sessions is a bad idea." >&2
  exit 1
fi

project-directory() {
  local dir="$SOURCE_DIR/$1"
  if [ -n "$1" -a -d $dir ]; then
    echo $dir
  else
    echo "$PWD"
  fi
}

directory="$(project-directory $1)"
name="$(sanitize ${1:-$directory})"

if ! $(tmux has-session -t $name &>/dev/null); then
  # Cleanup env
  export PATH=$ORIG_PATH
  unset ORIG_PATH

  cols="$(tput cols)"
  cd $directory

  tmux new -s $name -n code -d -x${cols-150} -y50
  tmux split-window -h -t $name
  tmux new-window -a -d -n server -t $name:0
  tmux select-layout -t $name main-vertical &>/dev/null \;
  tmux send-keys -t $name:0.1 'vim .' C-m
  tmux send-keys -t $name:0.0 'clear' C-m
fi

sleep 0.7
exec tmux attach-session -t $name
